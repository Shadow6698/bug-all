local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Remote = ReplicatedStorage:FindFirstChild("RE") and ReplicatedStorage.RE:FindFirstChild("1Gu1n")

local bugados = {} -- [Nome] = true
local connection = nil

-- Fun√ß√£o que aplica o bug nos players da lista
local function startLoop()
    if connection then return end -- j√° est√° rodando
    connection = RunService.Stepped:Connect(function()
        for nome, ativo in pairs(bugados) do
            if ativo then
                local target = Players:FindFirstChild(nome)
                if target and target ~= LocalPlayer and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                    local crazyVector = Vector3.new(
                        math.random(1e14, 1e15),
                        math.random(1e14, 1e15),
                        math.random(1e14, 1e15)
                    )

                    local args = {
                        [1] = target.Character.HumanoidRootPart,
                        [2] = target.Character.HumanoidRootPart,
                        [3] = crazyVector,
                        [4] = target.Character.HumanoidRootPart.Position,
                        [5] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault:FindFirstChild("GunScript_Local") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("MuzzleEffect"),
                        [6] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault:FindFirstChild("GunScript_Local") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("HitEffect"),
                        [7] = 0,
                        [8] = 0,
                        [9] = { [1] = false },
                        [10] = {
                            [1] = 25,
                            [2] = Vector3.new(100, 100, 100),
                            [3] = BrickColor.new(29),
                            [4] = 0.25,
                            [5] = Enum.Material.SmoothPlastic,
                            [6] = 0.25
                        },
                        [11] = true,
                        [12] = false
                    }
                    Remote:FireServer(unpack(args))
                end
            end
        end
    end)
end

-- Para o loop se n√£o houver mais players bugados
local function stopLoopIfEmpty()
    local tem = false
    for _, ativo in pairs(bugados) do
        if ativo then tem = true break end
    end
    if not tem and connection then
        connection:Disconnect()
        connection = nil
    end
end

-- Adicionar todos
local function bugAll()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            bugados[plr.Name] = true
        end
    end
    startLoop()
    print("üí• Bugado: TODOS")
end

-- Remover todos
local function removeAll()
    for nome in pairs(bugados) do
        bugados[nome] = nil
    end
    stopLoopIfEmpty()
    print("‚úÖ Todos desbugados")
end

-- Buscar player por nome parcial
local function findPlayerByPartialName(txt)
    txt = txt:lower()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Name:lower():find(txt) then
            return plr
        end
    end
    return nil
end

-- Adicionar um player espec√≠fico
local function bugPlayer(partialName)
    local plr = findPlayerByPartialName(partialName)
    if plr then
        bugados[plr.Name] = true
        startLoop()
        print("üí• Bugado: " .. plr.Name)
    else
        warn("‚ùå Nenhum player encontrado com: " .. partialName)
    end
end

-- Remover um player espec√≠fico
local function removeBugPlayer(partialName)
    local plr = findPlayerByPartialName(partialName)
    if plr and bugados[plr.Name] then
        bugados[plr.Name] = nil
        stopLoopIfEmpty()
        print("‚úÖ Desbugado: " .. plr.Name)
    else
        warn("‚ùå Player n√£o est√° bugado ou n√£o existe: " .. partialName)
    end
end

-- Comandos do chat
LocalPlayer.Chatted:Connect(function(msg)
    local m = msg:lower():gsub("^%s*(.-)%s*$", "%1")
    if m == "/bug all" then
        bugAll()
    elseif m == "/remove bug" then
        removeAll()
    elseif m:sub(1,5) == "/bug " then
        bugPlayer(m:sub(6))
    elseif m:sub(1,11) == "/removebug " then
        removeBugPlayer(m:sub(12))
    end
end)
